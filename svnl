#!/usr/bin/env python

from argparse import ArgumentParser
import humanize
import shlex
import sys
import time
import xml.etree.ElementTree as etree
from datetime import datetime
from pytz import timezone
from subprocess import check_output

status_colors = {
    'M' : '31',   # red 
    'A' : '32',   # green
    'D' : '31;1', # bold red
}

def parse_args():
    parser = ArgumentParser()
    parser.add_argument('-l', '--limit', type=int, default=10)
    parser.add_argument('-v', '--verbose', action='store_true', default=False)
    return parser.parse_args()

def get_offset_hour():
    if time.localtime().tm_isdst:
        offset = time.altzone / 3600
    else:
        offset = time.timezone / 3600
    return offset

def utc_to_local(dateobj):
    utc = timezone('UTC')
    local = timezone('Etc/GMT%+d' % get_offset_hour())
    return utc.localize(dateobj).astimezone(local)

def humanize_date(datestr):
    dateobj = datetime.strptime(datestr, '%Y-%m-%dT%H:%M:%S.%fZ')
    dateobj = utc_to_local(dateobj).replace(tzinfo=None)
    return humanize.naturaltime(dateobj)

def main():
    args = parse_args()
    verbose = '-v' if args.verbose else ''

    log = check_output(shlex.split('svn log --xml -l {} {}'.format(args.limit, verbose)))
    root = etree.fromstring(log)

    for entry in root:
        rev = entry.attrib['revision']
        author = entry.find('author').text
        date = humanize_date(entry.find('date').text)
        msg = entry.find('msg').text
        if msg: msg = msg.splitlines()[0]

        sys.stdout.write('\033[31m{}\033[0m - {} \033[32m({})\033[0m \033[34m<{}>\033[0m\n'.format(rev, msg, date, author))

        if verbose:
            sys.stdout.write('\n')
            for path in entry.find('paths'):
                action = path.attrib['action']
                sys.stdout.write('  \033[{}m{}\033[0m {}\n'.format(status_colors[action], action, path.text))
            sys.stdout.write('\n')


if __name__ == '__main__':
    main()
